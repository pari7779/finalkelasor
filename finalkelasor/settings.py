"""
Django settings for finalkelasor project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5x%#=-^gt4x#nb2p84=&ndczjmj*4*5wc2t=#8%2^s#v!n70+u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'USER',
    #'PROJECTS',
    #'PAYMENT',
    #'TICKET',
    #'WEBLOG',
    #'BOOTCAMP'

]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'finalkelasor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'finalkelasor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # این خط JWT را به عنوان روش احراز هویت قرار می‌دهد.
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # این خط اطمینان می‌دهد که تنها کاربران احراز هویت‌شده به منابع دسترسی دارند.
    ],
}

AUTH_USER_MODEL = 'auth.User'

from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  # عمر توکن دسترسی (Access Token) به مدت 5 دقیقه است.
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # عمر توکن تجدید (Refresh Token) به مدت 1 روز است.
    'ROTATE_REFRESH_TOKENS': False,  # اگر True باشد، پس از هر بار استفاده از Refresh Token، یک Refresh Token جدید صادر می‌شود.
    'BLACKLIST_AFTER_ROTATION': True,  # اگر True باشد، پس از چرخش توکن تجدید، توکن‌های قبلی به لیست سیاه (Blacklist) اضافه می‌شوند.
    'ALGORITHM': 'HS256',  # الگوریتم امضای JWT. HS256 یک الگوریتم HMAC با استفاده از SHA-256 است.
    'SIGNING_KEY': 'your_secret_key',  # کلید مخفی برای امضای توکن‌ها (باید آن را از متغیرهای محیطی بخوانید تا امنیت بیشتر باشد).
    'VERIFYING_KEY': None,  # کلید برای تأیید صحت توکن‌های ارسالی. برای تأیید توکن‌های صادر شده با الگوریتمی غیر از HMAC، باید این کلید را تنظیم کنید.
    'AUDIENCE': None,  # به عنوان "مخاطب" توکن استفاده می‌شود. اگر نیاز به تأیید Audience داشته باشید، می‌توانید آن را تنظیم کنید.
    'ISSUER': None,  # به عنوان "ناشر" توکن استفاده می‌شود. این می‌تواند برای تأیید اعتبار صادرکننده توکن باشد.
    'JWK_URL': None,  # URL برای دریافت کلیدهای عمومی JSON Web Key (JWK) که برای تأیید توکن‌ها استفاده می‌شود.
    'LEEWAY': 0,  # میزان انعطاف‌پذیری زمانی برای توکن‌ها. به طور پیش‌فرض صفر است.
}

# تنظیمات احراز هویت
AUTH_USER_MODEL = 'auth.User'


# تنظیمات کاوهنگار
KAVEHNEGAR_API_KEY = 'your-api-key-here'
KAVEHNEGAR_OTP_TEMPLATE = 'otp-template-name'